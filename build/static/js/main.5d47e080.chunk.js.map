{"version":3,"sources":["reportWebVitals.js","Login.js","ToDoAddForm.js","ToDoTitle.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","background","height","root","margin","spacing","width","maxWidth","paper","display","flexDirection","alignItems","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","word","fontWeight","fontSize","fontStyle","avatar","form","marginTop","bottom","ToDoAddForm","props","state","newText","todo","text","editing","this","remove","id","checkToggle","setState","e","target","value","saveEditedValue","className","completed","onClick","checkTodoToggle","onDoubleClick","showEditForm","placeholder","onChange","getNewText","deleteTodo","React","Component","ToDoTitle","App","todos","color","newId","preventDefault","newTodos","filter","item","map","getNewValue","addTodo","ReactDOM","render","exact","path","component","prop","classes","useState","password","showPassword","values","setvalues","Grid","container","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","alt","src","Typography","noValidate","autoComplete","TextField","label","fullWidth","FormControl","required","htmlFor","Input","event","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","FormControlLabel","control","Checkbox","to","Button","variant","submit","href","document","getElementById"],"mappings":"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","file":"static/js/main.5d47e080.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//import Todo from './Todoapp';\r\n//import { Route } from 'react-router-dom'\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link} from 'react-router-dom'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Inputlabel from '@material-ui/core/Inputlabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  background: {\r\n    height: '100vh',\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(0),\r\n      width: '100%',\r\n      maxWidth: 500,\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 10),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(http://localhost:3000/CGU.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    width:'100%'\r\n  },\r\n  word: {\r\n    fontWeight:'100%',\r\n    fontSize: 30,\r\n    fontStyle: 'Bold',\r\n    margin: theme.spacing(5),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(50),\r\n    \r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  bottom:{\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setvalues] = React.useState({\r\n    password:'',\r\n    showPassword: true,\r\n  });\r\n  const handlechange = (prop) => (event) => {\r\n    setvalues({ ...values, [prop]: event.target.value })\r\n  };\r\n  const handleclickShowPassword = () => {\r\n    setvalues({ ...values, showPassword: !values.showPassword })\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <Grid container component=\"main\" className={classes.background}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={20} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar alt=\"CGU\" src=\"icon2.png\" className={classes.Avatar}/>\r\n              <Typography className={classes.word}>\r\n                  長庚大學登入網站\r\n              </Typography>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Email-address\"\r\n                  fullWidth\r\n                margin='normal' />\r\n              <FormControl fullWidth margin='normal' required>            \r\n                <Inputlabel htmlFor=\"standard-adorment-password\">Password</Inputlabel>\r\n                <Input\r\n                  label=\"password\"\r\n                  id=\"password\"\r\n                  fullWidth\r\n                  margin='normal'\r\n                  type={values.showPassword ? 'text' : 'password'}\r\n                  value={values.password}\r\n                  onChange={handlechange('password')}\r\n                  endAdornment={\r\n                    <InputAdornment>\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleclickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                      >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  } />\r\n              </FormControl>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"secondary\" />}\r\n                  label=\"記住自己\" />\r\n            <switch>\r\n              <Link to=\"/about\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </Link>\r\n            </switch>\r\n                <Grid container>\r\n                  <Grid item xs >\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                    忘記密碼?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item xs >\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                    還沒註冊 辦一個八\r\n                    </Link>\r\n                  </Grid>\r\n              </Grid>\r\n              </form>\r\n          </div>\r\n          <Grid item xs >\r\n            <Link href=\"https://www.cgu.edu.tw/\"><img src='icon.png' alt=\"CGU\"/></Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );  \r\n}","import React from 'react';\r\n\r\nclass ToDoAddForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n\r\n        this.state = {\r\n            newText: props.todo.text,\r\n            editing: false,\r\n        }\r\n    }\r\n    \r\n    // 刪除\r\n    deleteTodo () {\r\n        this.props.remove(this.props.todo.id);\r\n    }\r\n\r\n    // 完成\r\n    checkTodoToggle () {\r\n        this.props.checkToggle(this.props.todo.id);\r\n    }\r\n\r\n    // 顯示編輯表單\r\n    showEditForm() {\r\n        const {editing} = this.state;\r\n\r\n        this.setState({\r\n            newText: this.props.todo.text,\r\n            editing: !editing,\r\n        });\r\n    }\r\n\r\n    // 取表單輸入內容\r\n    getNewText(e) {\r\n        const newText = e.target.value;\r\n\r\n        this.setState({\r\n            newText: newText,\r\n        });\r\n        \r\n    }\r\n    \r\n    // 儲存編輯資料\r\n    saveEditedValue() {\r\n        const {newText} = this.state;\r\n\r\n        this.props.saveEditedValue(this.props.todo.id, newText);\r\n        this.setState({\r\n            newText: this.props.todo.text,\r\n            editing: false,\r\n        });\r\n    }\r\n    \r\n\r\n    render () {\r\n        const {editing} = this.state;\r\n        const {todo} = this.props;\r\n        \r\n        //console.log(this.state)\r\n\r\n        return (\r\n            <li className={ \"list-group-item list-row \" + (todo.completed ? \"done\" : \"\") }>\r\n                <div className=\"btn-circle checkbox\" onClick={() => this.checkTodoToggle()} >✓</div>\r\n                <div className=\"list-text__container\" onDoubleClick={() => this.showEditForm()}>\r\n                    { \r\n                        !editing && <span className=\"list-text\">{ todo.text }</span> \r\n                    }\r\n                    {\r\n                        editing && \r\n                        <div className={\"input-group\"}>\r\n                            <input type=\"text\" className=\"form-control\" placeholder={todo.text} value={this.state.newText} onChange={(e) => this.getNewText(e)}/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.showEditForm()}>取消</button>\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.saveEditedValue()}>完成編輯</button>\r\n                            </div>       \r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className=\"btn-circle delete\" onClick={() => this.deleteTodo()} >✕</div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\nexport default ToDoAddForm;","import React from 'react';\r\nclass ToDoTitle extends React.Component {\r\n    render () {\r\n    return <h1>CGU Todo list</h1>;\r\n    }\r\n   }\r\n   export default ToDoTitle;","import './App.css';\nimport React from 'react';\n// import out from './toDoList';\nimport ToDoAddForm from './ToDoAddForm';\nimport ToDoTitle from './ToDoTitle';\nclass App extends React.Component {\n  constructor (props) {\n      super (props);\n      this.state = {\n          todos: [\n              {id: 1, text: '1', color:'red', completed: true},\n              {id: 2, text: '2', completed: false},\n              {id: 3, text: '3', completed: false},\n          ],\n          newId: 4,\n          newText: '',\n      }\n  }\n  \n  // 取 todo 的內容\n  getNewValue (e) {\n      const newText = e.target.value;\n      this.setState({\n          newText: newText,\n      });\n  }\n  \n\n  // 新增\n  addTodo (e) {\n      const {todos, newText, newId} = this.state;\n      \n      if (!newText) {\n          e.preventDefault();\n          return;\n      }\n      \n      this.setState({\n          todos: [\n              ...todos,\n              {id: newId, text: newText, completed: false}\n          ],\n          newId: newId +1,\n          newText: '',\n      });\n  }\n\n  // 刪除\n  deleteTodo (id) {\n      const {todos} = this.state;\n      \n      let newTodos = todos.filter((item) => item.id !== id);\n      \n      this.setState({\n          todos: newTodos,\n      });        \n  }\n\n  // 完成\n  checkTodoToggle (id) {\n      const {todos} = this.state;\n\n      let newTodos = todos.map((item) => {\n          if(item.id === id){\n              item.completed = !item.completed;\n          }\n          return item;\n      });\n      \n      this.setState({\n          todos: newTodos,\n      })\n  }\n\n\n  // 編輯\n  saveEditedValue(id, value) {\n      const {todos} = this.state;\n\n      let newTodos = todos.map((item) => {\n          if(item.id === id){\n              item.text = value;\n          }\n          return item;\n      });\n      \n      this.setState({\n          todos: newTodos,\n      })\n  }\n  \n\n\n  render () {\n      let {todos} = this.state;\n      \n      //console.log(todos)\n\n      return (\n          <div className=\"container\">\n              <header className=\"header__container\">\n                <ToDoTitle></ToDoTitle>\n              </header>\n              <div className=\"input-group mb-3\">\n                  <input type=\"text\" className=\"form-control\" id=\"input-add\" placeholder=\"add a new todo\"\n                      value={this.state.newText}\n                      onChange={(e) => this.getNewValue(e)} />\n                  <span className=\"input-group-append\">\n                      <button\n                          className=\"btn btn-outline-secondary\"\n                          onClick={(e) => this.addTodo(e)}\n                      >Add</button>\n                  </span>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                  {todos.map((todo) =>\n                      <ToDoAddForm\n                          key={todo.id}\n                          todo={todo}\n                          remove={(id) => this.deleteTodo(id)}\n                          checkToggle={(id) => this.checkTodoToggle(id)}\n                          saveEditedValue={(id, value) => this.saveEditedValue(id, value)}\n                      />\n                  )}\n              </ul>\n          </div>\n      );\n  }\n}\n// function App() {\n//   return (\n//     <div>{git()}</div>\n//   );\n// }\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router,Route} from 'react-router-dom'\nimport BasicTextFields from './Login';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Route  exact path=\"/\" component={BasicTextFields}/>\n      <Route  path=\"/about\" >\n      <App/>\n      </Route>\n    </div>\n  </Router>,\n  document.getElementById('root'));\n  reportWebVitals();"],"sourceRoot":""}